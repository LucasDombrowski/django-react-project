# Generated by Django 5.1.7 on 2025-05-15 16:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='competition_logos/')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            options={
                'verbose_name': 'Competition',
                'verbose_name_plural': 'Competitions',
                'ordering': ['start_date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='team_logos/')),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Teams',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_one_score', models.IntegerField(default=0)),
                ('team_two_score', models.IntegerField(default=0)),
                ('team_one_draw_score', models.IntegerField(default=0, help_text='The score of the match if it was a draw and it needed a winner.')),
                ('team_two_draw_score', models.IntegerField(default=0, help_text='The score of the match if it was a draw and it needed a winner.')),
                ('score_points', models.IntegerField(default=10, help_text="Points awarded if the user's bet on this match is correct.")),
                ('start_datetime', models.DateTimeField()),
                ('is_finished', models.BooleanField(default=False)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='django_bridge_project.competition')),
                ('team_one', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='django_bridge_project.team')),
                ('team_two', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='django_bridge_project.team')),
            ],
            options={
                'verbose_name': 'Match',
                'verbose_name_plural': 'Matches',
                'ordering': ['start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='Bet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bets', to=settings.AUTH_USER_MODEL)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bets', to='django_bridge_project.match')),
            ],
            options={
                'verbose_name': 'Bet Slip',
                'verbose_name_plural': 'Bet Slips',
                'ordering': ['match', 'user'],
                'unique_together': {('match', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text="The question or description for this prediction. E.g., 'Final score of Team A?', 'First player to score?', 'Will a penalty be awarded?'", max_length=255)),
                ('prediction_type', models.CharField(choices=[('numerical', 'Numerical'), ('player', 'Player'), ('boolean', 'Boolean')], default='numerical', max_length=20)),
                ('score_points', models.IntegerField(default=10, help_text="Points awarded if the user's bet on this prediction is correct.")),
                ('correct_value', models.CharField(blank=True, help_text='The actual outcome of this prediction, filled after the match is settled.', max_length=255, null=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='django_bridge_project.match')),
            ],
            options={
                'verbose_name': 'Prediction Criterion',
                'verbose_name_plural': 'Prediction Criteria',
                'ordering': ['match', 'label'],
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('role', models.CharField(blank=True, max_length=100)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='player_photos/')),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='django_bridge_project.team')),
            ],
            options={
                'verbose_name': 'Player',
                'verbose_name_plural': 'Players',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('bet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='django_bridge_project.bet')),
                ('prediction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_answers', to='django_bridge_project.prediction')),
            ],
            options={
                'verbose_name': "User's Answer",
                'verbose_name_plural': "User's Answers",
                'ordering': ['bet', 'prediction'],
                'unique_together': {('bet', 'prediction')},
            },
        ),
    ]
